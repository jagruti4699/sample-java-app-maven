pipeline:
  name: test-1
  identifier: test1
  projectIdentifier: jagruti_playground_project
  orgIdentifier: default
  tags: {}
  properties:
    ci:
      codebase:
        connectorRef: GithubJagruti
        build: <+input>
  stages:
    - stage:
        name: build
        identifier: build
        description: ""
        type: CI
        spec:
          cloneCodebase: true
          caching:
            enabled: true
            override: true
          platform:
            os: Linux
            arch: Amd64
          runtime:
            type: Cloud
            spec: {}
          execution:
            steps:
              - step:
                  type: OsvScanner
                  name: OsvScanner_1
                  identifier: OsvScanner_1
                  spec:
                    mode: orchestration
                    config: default
                    target:
                      type: repository
                      detection: auto
                    advanced:
                      log:
                        level: info
              - step:
                  type: BuildAndPushDockerRegistry
                  name: BuildAndPushDockerRegistry_1
                  identifier: BuildAndPushDockerRegistry_1
                  spec:
                    connectorRef: Dockerhubjagruti
                    repo: 46990406/demo-harness-1
                    tags:
                      - latest
                    dockerfile: zenzbg-template/greetings/Dockerfile
                    context: zenzbg-template/greetings
              - parallel:
                  - step:
                      type: Background
                      name: dind
                      identifier: dind
                      spec:
                        connectorRef: account.harnessImage
                        image: docker:dind
                        shell: Sh
                  - step:
                      type: AquaTrivy
                      name: AquaTrivy_1
                      identifier: AquaTrivy_1
                      spec:
                        target:
                          detection: auto
                          type: container
                        advanced:
                          log:
                            level: info
                          args: {}
                        privileged: true
                        mode: orchestration
                        config: default
                        image:
                          type: local_image
                          name: 46990406/demo-harness-1
                          tag: latest
                  - step:
                      type: Grype
                      name: Grype_1
                      identifier: Grype_1
                      spec:
                        target:
                          detection: auto
                          type: container
                        advanced:
                          log:
                            level: info
                          args: {}
                        privileged: true
                        mode: orchestration
                        config: default
                        image:
                          type: local_image
                          name: 46990406/demo-harness-1
                          tag: latest
              - step:
                  type: Run
                  name: Run_1
                  identifier: Run_1
                  spec:
                    shell: Sh
                    command: |-
                      ssh -o StrictHostKeyChecking=no -i {{secrets.ec2-ssh-private-key}} neosoft@10.0.61.220 << 'EOF'
                        # Pull the Docker image
                        docker pull 46990406/demo-harness-1:latest

                        # Run the Docker container
                        docker run -d --name demo-harness-app -p 8080:8080 46990406/demo-harness-1:latest
                      EOF
          sharedPaths:
            - /var/run
