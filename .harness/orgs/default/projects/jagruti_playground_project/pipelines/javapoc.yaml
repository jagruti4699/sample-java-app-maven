pipeline:
  name: java-poc
  identifier: javapoc
  projectIdentifier: jagruti_playground_project
  orgIdentifier: default
  tags: {}
  properties:
    ci:
      codebase:
        connectorRef: GithubJagruti
        build: <+input>
  stages:
    - stage:
        name: build stage
        identifier: build_stage
        type: CI
        spec:
          cloneCodebase: true
          caching:
            enabled: true
            override: true
          platform:
            os: Linux
            arch: Amd64
          runtime:
            type: Cloud
            spec: {}
          execution:
            steps:
              - step:
                  type: Run
                  name: Build Java App
                  identifier: Build_Java
                  spec:
                    shell: Sh
                    command: |
                      echo "building java application"
                      mvn -B package --file zenzbg-template/greetings/pom.xml
              - step:
                  type: BuildAndPushDockerRegistry
                  name: Build and Push Image
                  identifier: Build_Push_Image
                  spec:
                    connectorRef: Dockerhubjagruti
                    repo: 46990406/demo-harness
                    tags:
                      - latest
                    dockerfile: zenzbg-template/greetings/Dockerfile
                    context: zenzbg-template/greetings
              - step:
                  type: Run
                  name: Run_2
                  identifier: Run_2
                  spec:
                    shell: Bash
                    command: |-
                      echo "$key" > key2.pem
                      ssh -i key2.pem -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null vm@20.244.32.79
                      whoami
                      curl ifconfig.io
                      docker -v
                      cat /etc/os-release
                      pwd
                      echo "Pulling image "
                      docker pull 46990406/demo-harness:latest
                      docker stop demo-harness || true
                      docker rm demo-harness || true
                      docker run -d --name demo-harness -p 8080:8080 46990406/demo-harness:latest
                    envVariables:
                      key: <+secrets.getValue("azure-key-file")>
        description: ""
    - stage:
        name: Deploy
        identifier: Deploy
        description: ""
        type: Custom
        spec:
          environment:
            environmentRef: EnvJagruti
            deployToAll: false
            infrastructureDefinitions:
              - identifier: Infra
          execution:
            steps:
              - step:
                  type: ShellScript
                  name: ShellScript_1
                  identifier: ShellScript_1
                  spec:
                    shell: Bash
                    executionTarget: {}
                    source:
                      type: Inline
                      spec:
                        script: |
                          echo "Pulling image and running container..."
                          pwd
                          curl ifconfig.io
                    environmentVariables: []
                    outputVariables: []
                    delegateSelectors:
                      - docker-delegate
                  timeout: 10m
        tags: {}
        delegateSelectors:
          - docker-delegate
    - stage:
        name: custom deploy
        identifier: custom_deploy
        description: ""
        type: Custom
        spec:
          execution:
            steps:
              - step:
                  type: ShellScript
                  name: ShellScript_1
                  identifier: ShellScript_1
                  spec:
                    shell: Bash
                    executionTarget: {}
                    source:
                      type: Inline
                      spec:
                        script: |-
                          whoami
                          curl ifconfig.io
                    environmentVariables: []
                    outputVariables: []
                  timeout: 10m
        tags: {}
