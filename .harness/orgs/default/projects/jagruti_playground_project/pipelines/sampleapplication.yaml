pipeline:
  name: sample-application
  identifier: sampleapplication
  projectIdentifier: jagruti_playground_project
  orgIdentifier: default
  tags: {}
  properties:
    ci:
      codebase:
        connectorRef: GithubAccountJagruti
        repoName: https://github.com/jagruti4699/sample-java-app-maven.git
        build: <+input>
  stages:
    - stage:
        name: build
        identifier: build
        description: ""
        type: CI
        spec:
          cloneCodebase: true
          caching:
            enabled: true
            override: false
          platform:
            os: Linux
            arch: Amd64
          runtime:
            type: Cloud
            spec: {}
          execution:
            steps:
              - step:
                  type: Run
                  name: Run_1
                  identifier: Run_1
                  spec:
                    connectorRef: Dockerhubjagruti
                    image: 46990406/harness-app
                    shell: Sh
                    command: |-
                      echo "building java application" 
                      mvn -B package--file zenzbg-template/greetings/pom.xml
    - stage:
        name: deploy
        identifier: deploy
        description: ""
        type: Deployment
        spec:
          deploymentType: Ssh
          service:
            serviceRef: javaappservice
          environment:
            environmentRef: envjavaapp
            deployToAll: false
            infrastructureDefinitions:
              - identifier: azurevmtypeinfra
          execution:
            steps:
              - step:
                  type: ShellScriptProvision
                  name: ShellScriptProvision_1
                  identifier: ShellScriptProvision_1
                  spec:
                    source:
                      type: Inline
                      spec:
                        script: |
                          #!/bin/bash
                          echo "$key" > vm_key.pem
                          chmod 400 vm_key.pem
                          ssh -i vm_key.pem -o StrictHostKeyChecking=no vm@20.244.49.40 <<EOF
                          echo "Connected to EC2."
                          curl ifconfig.io
                          whoami
                          cat /etc/os-release
                          pwd
                          echo "Pulling image "
                          sudo docker pull 46990406/harness-app:latest
                          sudo docker stop harness-app
                          sudo docker rm harness-app
                          sudo docker run -d --name harness-app -p 8088:8088 46990406/harness-app:latest
                          EOF 
                    environmentVariables:
                      - name: key
                        type: String
                        value: <+secrets.getValue("azure-key-file")>
                  timeout: 10m
            rollbackSteps: []
        tags: {}
        failureStrategies:
          - onFailure:
              errors:
                - AllErrors
              action:
                type: MarkAsSuccess
